## Working with remotes {.smaller}

::::: columns
:::: {.column width="50%"}
![](figures/git_workflow_remote.drawio.svg)

::: {.callout-note .fragment}
- `git clone` automatically adds remote `origin`, fetches all branches and sets up tracking for default branch
:::
::::
:::: {.column width="50%"}
- A remote is another copy of the repository.
- Local copy of remote branches (e.g. `origin/master`)
- `git fetch`: update local copies of remote branches

if current branch is tracking remote branch:

- `git pull`:
  - fetch from remote
  - merge remote branch into current local branch
- `git push`: push current local branch to remote.
:::::
::::

## Github
:::: columns
::: {.column width="50%"}
- "Just" another remote
- Largest host for git repositories.
- Offers some extra features:
  - Visual interface
  - Issue tracking
  - Code review (PRs, merging)
  - Forking
:::
::: {.column width="50%"}
![](figures/github_metagenlab.png)
:::
::::
