
## Recording changes {auto-animate="true"}

::::: columns

:::: {.column width="100%"}
![](figures/git_workflow1.svg){fig-align="center"}
::::

:::: {.column width="0%"}

::::
:::::


## Recording changes {auto-animate="true"}

```{bash}
#| include: false
git checkout -b temp
```

::::: columns
:::: {.column width="30%"}
![](figures/git_workflow1.svg){fig-align="center"}
::::

:::: {.column width="70%"}
```{bash}
#| eval: false
git status
git apply patches/modify_files_and_add_new_file.md
git status
git diff
git add training/file*.md
git diff
git diff --staged
git commit -m "Modified file1 and file2 and added file3.md"
git log -n2 --oneline
```

::: {.fragment .current-only data-code-focus="1"}
```{bash}
#| echo: false
git status
```
:::

::: {.fragment .current-only data-code-focus="2"}
```{bash}
#| echo: false
git apply patches/modify_files_and_add_new_file.md
```
:::

::: {.fragment .current-only data-code-focus="3"}
```{bash}
#| echo: false
git status
```
:::

::: {.fragment .current-only data-code-focus="4"}
```{bash}
#| echo: false
git diff
```
:::

::: {.fragment .current-only data-code-focus="5"}
```{bash}
#| echo: false
git add training/file*.md
```
:::

::: {.fragment .current-only data-code-focus="6"}
```{bash}
#| echo: false
git diff
```
:::

::: {.fragment .current-only data-code-focus="7"}
```{bash}
#| echo: false
git diff --staged
```
:::

::: {.fragment .current-only data-code-focus="8"}
```{bash}
#| echo: false
git commit -m "Modified file1 and file2 and added file3.md"
```
:::

::: {.fragment .current-only data-code-focus="9"}
```{bash}
#| echo: false
git log -n2 --oneline
```
:::


```{bash}
#| include: false
git checkout master
git branch -D temp
```

::: {.fragment .fade-in .callout-tip}
If you want to stage only part of a file you can use

`git add -i <paths>`
:::

::::
:::::
