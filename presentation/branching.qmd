# Branching

## What is a branch?

![](figures/branching1.svg){.nostretch width=80% fig-align="center"}

- A branch is simply a pointer to a commit.
- Branching is essential for collaborative work.
- It's cleaner and easier even when working alone on a project.
- Working with branches should be your default workflow.

## Basic branching {auto-animate="true"}

::::: columns
:::: {.column width="50%"}
::: {.r-stack out-width=1000}
![](figures/branching2.svg){.nostretch fig-width="1000" out-width="1000" .fragment fragment-index=1 .current-only}
![](figures/branching3.svg){.fragment fragment-index=2 .current-only}
![](figures/branching3.svg){.fragment fragment-index=3 .current-only}
![](figures/branching3.svg){.fragment fragment-index=4 .current-only}
![](figures/branching3.svg){.fragment fragment-index=5 .current-only}
![](figures/branching4.svg){.fragment fragment-index=6 .current-only}
![](figures/branching4_bis.svg){.fragment fragment-index=7 .current-only}
![](figures/branching5.svg){.fragment fragment-index=8 .current-only}
![](figures/branching5.svg){.fragment fragment-index=9 .current-only}
![](figures/branching5.svg){.fragment fragment-index=10 .current-only}
![](figures/branching5.svg){.fragment fragment-index=11 .current-only}
![](figures/branching6.svg){.fragment fragment-index=12}
:::

::::

:::: {.column width="50%"}
```{bash}
#| eval: false
git branch
git checkout -b dev
git branch
git apply patches/modify_file2.patch
git add training/file2.md
git commit -m "Modified second file"
git checkout master
git checkout -b hotfix
git branch
git apply patches/modify_file1.patch
git add training/file1.md
git commit -m "Fix important bug."
git log -n6 --oneline --all --graph --decorate
```

::: {.fragment fragment-index=1 .current-only data-code-focus="1"}
```{bash}
#| echo: false
git branch
```
:::

::: {.fragment fragment-index=2 .current-only data-code-focus="2"}
```{bash}
#| echo: false
git checkout -b dev
```
:::

::: {.fragment fragment-index=3 .current-only data-code-focus="3"}
```{bash}
#| echo: false
git branch
```
:::

::: {.fragment fragment-index=4 .current-only data-code-focus="4"}
```{bash}
#| echo: false
git apply patches/modify_file2.patch
```
:::

::: {.fragment fragment-index=5 .current-only data-code-focus="5"}
```{bash}
#| echo: false
git add training/file2.md
```
:::

::: {.fragment fragment-index=6 .current-only data-code-focus="6"}
```{bash}
#| echo: false
git commit -m "Modified second file"
```
:::

::: {.fragment fragment-index=7 .current-only data-code-focus="7"}
```{bash}
#| echo: false
git checkout master
```
:::

::: {.fragment fragment-index=8 .current-only data-code-focus="8"}
```{bash}
#| echo: false
git checkout -b hotfix
```
:::

::: {.fragment fragment-index=9 .current-only data-code-focus="9"}
```{bash}
#| echo: false
git branch
```
:::

::: {.fragment fragment-index=10 .current-only data-code-focus="10"}
```{bash}
#| echo: false
git apply patches/modify_file1.patch
```
:::

::: {.fragment fragment-index=11 .current-only data-code-focus="11"}
```{bash}
#| echo: false
git add training/file1.md
```
:::

::: {.fragment fragment-index=12 .current-only data-code-focus="12"}
```{bash}
#| echo: false
git commit -m "Fix important bug."
```
:::

::: {.fragment fragment-index=13 data-code-focus="13"}
```{bash}
#| echo: false
git log -n6 --oneline --all --graph --decorate
```
:::

::::
:::::

## Merging branches

::::: columns
:::: {.column width="50%"}
::: {.r-stack}
![](figures/merging1.drawio.svg){.fragment fragment-index=1 .current-only}
![](figures/merging2.drawio.svg){.fragment fragment-index=2 .current-only}
![](figures/merging3.drawio.svg){.fragment fragment-index=3 .current-only}
![](figures/merging3.drawio.svg){.fragment fragment-index=4 .current-only}
![](figures/merging3_bis.drawio.svg){.fragment fragment-index=5 .current-only}
![](figures/merging4.drawio.svg){.fragment fragment-index=6 .current-only}
![](figures/merging4.drawio.svg){.fragment fragment-index=7 .current-only}
![](figures/merging4.drawio.svg){.fragment fragment-index=8 .current-only}
![](figures/merging5.drawio.svg){.fragment fragment-index=9 .current-only}
![](figures/merging6.drawio.svg){.fragment fragment-index=10 .current-only}
![](figures/merging7.drawio.svg){.fragment fragment-index=11 .current-only}
![](figures/merging8.drawio.svg){.fragment fragment-index=12}
:::
::::

:::: {.column width="50%"}
```{bash}
#| eval: false
git checkout master
git checkout -b temp
git merge hotfix -m "Merge hotfix into temp"
git branch
git branch -d hotfix
git checkout dev
git apply patches/modify_file2_some_more.patch
git add training/file2.md
git commit -m "Finish new feature"
git checkout temp
git merge dev -m "Merge dev into temp"
git branch -d dev
git log -n6 --oneline --graph --decorate
```

::: {.fragment .current-only data-code-focus="1" fragment-index=1}
```{bash}
#| echo: false
git checkout master
```
:::

::: {.fragment .current-only data-code-focus="2" fragment-index=2}
```{bash}
#| echo: false
git checkout -b temp
```
:::

::: {.fragment .current-only data-code-focus="3" fragment-index=3}
```{bash}
#| echo: false
git merge hotfix -m "Merge hotfix into temp"
```
:::

::: {.fragment .current-only data-code-focus="4" fragment-index=4}
```{bash}
#| echo: false
git branch
```
:::

::: {.fragment .current-only data-code-focus="5" fragment-index=5}
```{bash}
#| echo: false
git branch -d hotfix
```
:::

::: {.fragment .current-only data-code-focus="6" fragment-index=6}
```{bash}
#| echo: false
git checkout dev
```
:::

::: {.fragment .current-only data-code-focus="7" fragment-index=7}
```{bash}
#| echo: false
git apply patches/modify_file2_some_more.patch
```
:::

::: {.fragment .current-only data-code-focus="8" fragment-index=8}
```{bash}
#| echo: false
git add training/file2.md
```
:::

::: {.fragment .current-only data-code-focus="9" fragment-index=9}
```{bash}
#| echo: false
git commit -m "Finish new feature"
```
:::

::: {.fragment .current-only data-code-focus="10" fragment-index=10}
```{bash}
#| echo: false
git checkout temp
```
:::

::: {.fragment .current-only data-code-focus="11" fragment-index=11}
```{bash}
#| echo: false
git merge dev -m "Merge dev into temp"
```
:::

::: {.fragment .current-only data-code-focus="12" fragment-index=12}
```{bash}
#| echo: false
git branch -d dev
```
:::

::: {.fragment data-code-focus="13" fragment-index=13}
```{bash}
#| echo: false
git log -n6 --oneline --graph --decorate
```
:::

::::
:::::
```{bash}
#| include: false
git checkout master
git branch -D temp
```

```{bash}
#| include: false
git checkout -b dev
git apply patches/modify_file2.patch
git add training/file2.md
git commit -m "Modified second file"
git checkout master
git checkout -b hotfix
git apply patches/modify_file1.patch
git add training/file1.md
git commit -m "Fix important bug."
git checkout master
git checkout -b temp
git merge hotfix -m "Merge hotfix into temp"
git branch -d hotfix
git checkout dev
git apply patches/modify_file2_some_more.patch
git add training/file2.md
git commit -m "Finish new feature"
```

## Rebasing branches

::::: columns
:::: {.column width="50%"}
```{bash}
#| eval: false
git log -n5 --oneline --graph --decorate --all
git rebase temp
git log -n5 --oneline --graph --decorate --all
git checkout temp
git merge dev
git log -n5 --oneline --graph --decorate --all
git branch -d dev
```

::: {.fragment .current-only data-code-focus="1" fragment-index=1}
```{bash}
#| echo: false
git log -n5 --oneline --graph --decorate --all
```
:::

::: {.fragment .current-only data-code-focus="2" fragment-index=2}
```{bash}
#| echo: false
git rebase temp
```
:::

::: {.fragment .current-only data-code-focus="3" fragment-index=3}
```{bash}
#| echo: false
git log -n5 --oneline --graph --decorate --all
```
:::

::: {.fragment .current-only data-code-focus="4" fragment-index=4}
```{bash}
#| echo: false
git checkout temp
```
:::

::: {.fragment .current-only data-code-focus="5" fragment-index=5}
```{bash}
#| echo: false
git merge dev
```
:::

::: {.fragment .current-only data-code-focus="6" fragment-index=6}
```{bash}
#| echo: false
git log -n5 --oneline --graph --decorate --all
```
:::

::: {.fragment data-code-focus="7" fragment-index=7}
```{bash}
#| echo: false
git branch -d dev
```
:::
::::

:::: {.column width="50%"}
::: {.r-stack}
![](figures/merging5.drawio.svg){.fragment fragment-index=1 .current-only}
![](figures/rebasing1.drawio.svg){.fragment fragment-index=2 .current-only}
![](figures/rebasing2.drawio.svg){.fragment fragment-index=3 .current-only}
![](figures/rebasing3.drawio.svg){.fragment fragment-index=4 .current-only}
![](figures/rebasing4.drawio.svg){.fragment fragment-index=5 .current-only}
![](figures/rebasing4.drawio.svg){.fragment fragment-index=6 .current-only}
![](figures/rebasing5.drawio.svg){.fragment fragment-index=7}
:::
::::
:::::

```{bash}
#| include: false
git checkout master
git branch -D temp
```


## Merging or rebasing?
::::: columns
:::: {.column width="50%"}
![](figures/merging8_cropped.drawio.svg)
![](figures/rebasing5_cropped.drawio.svg)
::::
:::: {.column width="50%"}
- Rebase:
    - Cleaner history
    - Rebased commits have a different hash
- Merge:
    - "Dirty" history
    - Merge commits can give complex diffs
    - commits conserve their hash
::::
:::::
